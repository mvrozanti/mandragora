#!/usr/bin/env python
from colour import Color
import rivalcfg
import json
from pathlib import Path
import sys

turn_on = sys.argv[1] == '--on' if len(sys.argv) > 1 else False
turn_off = sys.argv[1] == '--off' if len(sys.argv) > 1 else False

Path('/home/m/.cache/rivalcfg-config').mkdir(exist_ok=True)
state_file = Path('/home/m/.cache/rivalcfg-config/state')
if not state_file.exists():
    state_file.write_text('False')
    is_on = False
else:
    is_on = state_file.read_text() == 'True'

def get_pywal_colors():
    color_json = json.load(open('/home/m/.cache/wal/colors.json'))
    return list(color_json['colors'].values())

def sort_hex_colors_by_saturation(color_strings):
    colors = list(map(Color, color_strings))
    colors = {sum(c.rgb):c for c in colors}.values()
    colors = sorted(colors, key=lambda c: c.saturation, reverse=True)
    # import ptpython; ptpython.embed(globals(), locals())
    for color in colors:
        if color.saturation < .7:
            color.saturation = color.saturation**.1
            color.luminance = .1
    return [c.hex_l for c in colors]

color_strings = get_pywal_colors()
pywal_colors = sort_hex_colors_by_saturation(color_strings)

mouse = rivalcfg.get_first_mouse()

def turn_mouse_off(mouse):
    mouse.set_z1_color('#000')
    mouse.set_z2_color('#000')
    mouse.set_z3_color('#000')
    mouse.set_logo_color('#000')

def set_colors(mouse, pywal_colors):
    mouse.set_z1_color(  pywal_colors[0])
    mouse.set_z2_color(  pywal_colors[1])
    mouse.set_z3_color(  pywal_colors[2])
    mouse.set_logo_color(pywal_colors[3])

def intensify(color):
    # >127 gets hotter
    # <127 gets colder
    pass

if turn_on or (is_on and not turn_off):
    set_colors(mouse, pywal_colors)
    is_on = True
elif turn_off:
    turn_mouse_off(mouse)
    is_on = False

state_file.write_text(str(is_on))
